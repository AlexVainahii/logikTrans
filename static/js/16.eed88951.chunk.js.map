{"version":3,"file":"static/js/16.eed88951.chunk.js","mappings":"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","sources":["components/OrderForm.styled.js","fakeApi.js","components/PaymentForm.styled.js","components/PaymentForm.jsx","pages/Payment.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IconButton } from \"@mui/material\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nexport const Back = styled.span`\n  margin-left: 8px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n\n  @media (min-width: 768px) {\n    width: 750px;\n  }\n`;\n\nexport const FormRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Label = styled.label`\n  flex: 1 1 100%;\n\n  @media (min-width: 768px) {\n    flex: 0 0 50%;\n    text-align: left;\n    padding-right: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  background-color: #f5f5f5;\n\n  @media (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const SuggestionsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    cursor: pointer;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  border-radius: 3px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const LinkButton = styled.button`\n  display: flex;\n  padding: 10px;\n  border-radius: 3px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n  width: 70%;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const IconButtons = styled(IconButton)`\n  margin-right: 8px;\n`;\n\nexport const ActionsWrapper = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const NewOrderButton = styled.button`\n  padding: 10px;\n  border-radius: 3px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n`;\nexport const ButtonsContainer = styled.div`\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  padding: 10px;\n  border-radius: 3px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n  width: 70%;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;\nexport const TextButton = styled.div`\n  margin-right: 20px;\n`;\n","import axios from 'axios';\nexport const addDataToMockAPI = async (data, endpoint) => {\n  try {\n    const response = await axios.post(\n      `https://646bb7ca7d3c1cae4ce43282.mockapi.io/api/logic/${endpoint}`,\n      data\n    );\n    console.log('Дані успішно додані до MockAPI:', response.data);\n    return true;\n    // Тут ви можете додатково обробити відповідь сервера або виконати інші дії\n  } catch (error) {\n    console.error('Помилка при додаванні даних до MockAPI:', error);\n  }\n};\nexport async function fetchDataFromMockAPI(endpoint) {\n  try {\n    const response = await axios.get(\n      `https://646bb7ca7d3c1cae4ce43282.mockapi.io/api/logic/${endpoint}`\n    );\n    // Отримано дані з бекенду MockAPI\n    const data = response.data;\n    // Обробка отриманих даних\n\n    return data;\n  } catch (error) {\n    // Обробка помилки\n    console.error(error);\n    throw error;\n  }\n}\nexport async function fetchDataByIdFromMockAPI(endpoint, id) {\n  try {\n    const response = await axios.get(\n      `https://646bb7ca7d3c1cae4ce43282.mockapi.io/api/logic/${endpoint}?idd=${id}`\n    );\n    // Отримано дані з бекенду MockAPI за заданим id\n    const data = response.data;\n    // Обробка отриманих даних\n\n    return data;\n  } catch (error) {\n    // Обробка помилки\n    console.error(error);\n    throw error;\n  }\n}\n\n// Використання функції для отримання даних за id\n// Замініть 1 на власний id\n\nexport const getInternational = (origin, destination) => {\n  return origin !== destination;\n};\n\nexport const getcentrMap = shipment => {\n  const centerLat =\n    (shipment.originRoute.lat + shipment.destinationRoute.lat) / 2;\n  const centerLng =\n    (shipment.originRoute.lng + shipment.destinationRoute.lng) / 2;\n  return [centerLng, centerLat];\n};\n\nexport function getDistance(originRoute, destinationRoute) {\n  const earthRadius = 6371; // Радіус Землі в кілометрах\n\n  const dLat = toRadians(destinationRoute.lat - originRoute.lat);\n  const dLon = toRadians(destinationRoute.lng - originRoute.lng);\n\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(toRadians(originRoute.lat)) *\n      Math.cos(toRadians(destinationRoute.lat)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distance = earthRadius * c;\n\n  return Math.round(distance);\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\nexport function getZoom(distance) {\n  if (distance > 1800) {\n    return 1;\n  }\n  if (distance > 1400) {\n    return 2;\n  }\n  if (distance > 1000) {\n    return 3;\n  }\n\n  if (distance > 500) {\n    return 4;\n  }\n  return 5;\n}\nexport function getdestinationDate(distance, originDate) {\n  const currentDate = new Date(originDate);\n\n  if (distance > 2500) {\n    const deliveryDate = new Date(currentDate);\n    deliveryDate.setDate(currentDate.getDate() + 8);\n    return formatDate(deliveryDate);\n  }\n  if (distance > 1800) {\n    const deliveryDate = new Date(currentDate);\n    deliveryDate.setDate(currentDate.getDate() + 6);\n    return formatDate(deliveryDate);\n  }\n  if (distance > 1400) {\n    const deliveryDate = new Date(currentDate);\n    deliveryDate.setDate(currentDate.getDate() + 4);\n    return formatDate(deliveryDate);\n  }\n  if (distance > 1000) {\n    const deliveryDate = new Date(currentDate);\n    deliveryDate.setDate(currentDate.getDate() + 3);\n    return formatDate(deliveryDate);\n  }\n  if (distance > 500) {\n    const deliveryDate = new Date(currentDate);\n    deliveryDate.setDate(currentDate.getDate() + 2);\n    return formatDate(deliveryDate);\n  }\n\n  const deliveryDate = new Date(currentDate);\n  deliveryDate.setDate(currentDate.getDate() + 1);\n  return formatDate(deliveryDate);\n}\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nexport function calculateShippingCost(\n  distance,\n  weight,\n  pricePerKilometer,\n  transportType\n) {\n  let baseCost = distance * pricePerKilometer;\n\n  if (transportType) {\n    baseCost *= 1.5;\n  } else {\n    baseCost *= 1;\n  }\n\n  if (weight > 1000) {\n    const overweightCharge = (weight - 1000) * 0.5;\n    baseCost += overweightCharge;\n  }\n\n  return Math.round(baseCost);\n}\n\n// Замініть на ваш пароль\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const PForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Input, Label, PForm, SubmitButton } from \"./PaymentForm.styled\";\nimport { Title } from \"./OrderForm.styled\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { fetchDataByIdFromMockAPI } from \"../fakeApi\";\nimport { toast } from \"react-toastify\";\nimport { Loader } from \"./Loader\";\n\nconst PaymentForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const [shipment, setShipment] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      setIsLoading(true);\n      const fetchData = async () => {\n        try {\n          const fetchedShipment = await fetchDataByIdFromMockAPI(\n            \"shipment\",\n            id\n          );\n          if (fetchedShipment.length !== 0) {\n            setShipment(fetchedShipment[0]);\n            setName(fetchedShipment[0].client);\n          }\n        } catch (error) {\n          console.error(\"Помилка при отриманні перевезень:\", error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    navigate(`/`);\n    toast.success(\"Замовлення Оплачено!\", {\n      position: toast.POSITION.TOP_RIGHT, // Встановлення позиції Toast\n      autoClose: 3000, // Автоматичне закриття через 3 секунди\n      hideProgressBar: true, // Відображення прогрес-бару\n      closeOnClick: true, // Закриття Toast при кліку\n      pauseOnHover: true, // Пауза при наведенні курсору\n      draggable: true, // Можливість перетягування Toast\n    });\n    setName(\"\");\n    setCardNumber(\"\");\n    setExpiryDate(\"\");\n    setCvv(\"\");\n  };\n  const handleExpiryDate = (e) => {\n    const expiryDate = e.target.value;\n    const formattedexpiryDate = expiryDate.split(\"\"); // Розбиваємо рядок на масив символів\n    if (formattedexpiryDate.length === 2) {\n      formattedexpiryDate.push(\"/\");\n    }\n\n    setExpiryDate(formattedexpiryDate.join(\"\"));\n  };\n  const handleCardNumber = (e) => {\n    const cardNumber = e.target.value;\n    const formattedCardNumber = cardNumber.split(\"\"); // Розбиваємо рядок на масив символів\n    if (\n      formattedCardNumber.length === 4 ||\n      formattedCardNumber.length === 9 ||\n      formattedCardNumber.length === 14\n    ) {\n      formattedCardNumber.push(\" \");\n    }\n\n    setCardNumber(formattedCardNumber.join(\"\"));\n  };\n  const handleCancel = async (e) => {\n    toast.error(\"Замовлення Скасовано!\", {\n      position: toast.POSITION.TOP_RIGHT, // Встановлення позиції Toast\n      autoClose: 3000, // Автоматичне закриття через 3 секунди\n      hideProgressBar: true, // Відображення прогрес-бару\n      closeOnClick: true, // Закриття Toast при кліку\n      pauseOnHover: true, // Пауза при наведенні курсору\n      draggable: true, // Можливість перетягування Toast\n    });\n    navigate(`/`);\n    setName(\"\");\n    setCardNumber(\"\");\n    setExpiryDate(\"\");\n    setCvv(\"\");\n  };\n  return (\n    <>\n      <Title>Оплата замовлення</Title>\n      {isloading ? (\n        <Loader />\n      ) : (\n        <PForm onSubmit={handleSubmit}>\n          {shipment && (\n            <Label style={{ textAlign: \"center\", fontWeight: \"900\" }}>\n              № {shipment.shipmentNum}\n            </Label>\n          )}{\" \"}\n          <Label>\n            Ім'я замовника:\n            <Input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </Label>\n          <Label>\n            Номер кредитної/дебетової картки:\n            <Input\n              type=\"text\"\n              value={cardNumber}\n              maxLength={19}\n              onChange={handleCardNumber}\n              pattern=\"[0-9]{4} [0-9]{4} [0-9]{4} [0-9]{4}\"\n              required\n            />\n          </Label>\n          <Label>\n            Термін дії (MM/РР):\n            <Input\n              type=\"text\"\n              value={expiryDate}\n              onChange={handleExpiryDate}\n              maxLength={5}\n              required\n              pattern=\"(0[1-9]|1[0-2])/\\d{2}\"\n              placeholder=\"MM/РР\"\n            />\n          </Label>\n          <Label>\n            CVV-код:\n            <Input\n              type=\"password\"\n              value={cvv}\n              onChange={(e) => setCvv(e.target.value)}\n              maxLength={3}\n              required\n            />\n          </Label>\n          <Label>Сума замовлення {shipment && shipment.cost} грн</Label>\n          <SubmitButton type=\"submit\" style={{ marginTop: \"20px\" }}>\n            Олатити замовлення\n          </SubmitButton>\n          <SubmitButton\n            type=\"button\"\n            style={{ marginTop: \"20px\" }}\n            onClick={handleCancel}\n          >\n            Скасувати замовлення\n          </SubmitButton>\n        </PForm>\n      )}\n    </>\n  );\n};\n\nexport default PaymentForm;\n","import PaymentForm from \"../components/PaymentForm\";\n\nconst Payment = () => {\n  return (\n    <>\n      <main>\n        <PaymentForm />\n      </main>\n    </>\n  );\n};\nexport default Payment;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Form","_templateObject3","_templateObject4","FormRow","_templateObject5","Label","_templateObject6","Input","_templateObject7","SuggestionsList","_templateObject8","LinkButton","_templateObject9","_templateObject10","ButtonsContainer","IconButton","_templateObject11","_templateObject12","_templateObject13","_templateObject14","SubmitButton","_templateObject15","TextButton","_templateObject16","addDataToMockAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","endpoint","response","wrap","_context","prev","next","axios","concat","sent","console","log","abrupt","t0","error","stop","_x","_x2","apply","arguments","fetchDataFromMockAPI","_x3","_fetchDataFromMockAPI","_callee2","_context2","fetchDataByIdFromMockAPI","_x4","_x5","_fetchDataByIdFromMockAPI","_callee3","id","_context3","getInternational","origin","destination","getcentrMap","shipment","centerLat","originRoute","lat","destinationRoute","lng","getDistance","dLat","toRadians","dLon","a","Math","sin","cos","distance","atan2","sqrt","round","degrees","PI","getZoom","getdestinationDate","originDate","currentDate","Date","deliveryDate","setDate","getDate","formatDate","date","year","getFullYear","month","getMonth","toString","padStart","day","calculateShippingCost","weight","pricePerKilometer","transportType","baseCost","PForm","useParams","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","cardNumber","setCardNumber","_useState5","_useState6","expiryDate","setExpiryDate","_useState7","_useState8","cvv","setCvv","_useState9","_useState10","setShipment","_useState11","_useState12","isloading","setIsLoading","useEffect","fetchData","fetchedShipment","length","client","finish","handleSubmit","_ref2","e","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleCancel","_ref3","_jsxs","_Fragment","children","_jsx","Loader","onSubmit","style","textAlign","fontWeight","shipmentNum","type","value","onChange","target","required","maxLength","formattedCardNumber","split","push","join","pattern","formattedexpiryDate","placeholder","cost","marginTop","onClick","PaymentForm"],"sourceRoot":""}